name: CI Pipeline

concurrency:
  group: storywise
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "website/**"
      - "api/**"
      - "frontend/**"
      - "shared/**"
      - "Dockerfile"
      - "Dockerfile.website"
      - "package.json"
      - "package-lock.json"

env:
  REGISTRY_IMAGE: mihainueleanu/storywise

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.versionBump.outputs.tag }}
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout Git repo
        uses: actions/checkout@master

      - name: Automated Version Bump
        id: versionBump
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag-prefix: ""
          skip-on-empty: "false"
          skip-version-file: true
          output-file: false
          skip-commit: true

      - name: Automated GitHub Release
        uses: actions/create-release@v1
        if: ${{ steps.versionBump.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.versionBump.outputs.tag }}
          release_name: ${{ steps.versionBump.outputs.tag }}
          body: ${{ steps.versionBump.outputs.clean_changelog }}

  build-core:
    runs-on: ubuntu-latest
    needs: tag
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    outputs:
      tag: ${{ needs.tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        id: build
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          # push: true
          outputs: type=image,name=${{env.REGISTRY_IMAGE}},push-by-digest=true,name-canonical=true,push=true
          labels: ${{ steps.meta.outputs.labels }}
          # tags: mihainueleanu/storywise:latest,mihainueleanu/storywise:${{ needs.tag.outputs.tag }}
          cache-from: type=registry,ref=${{env.REGISTRY_IMAGE}}:latest
          cache-to: type=inline

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge-core:
    runs-on: ubuntu-latest
    needs:
      - build-core
    outputs:
      tag: ${{ needs.build-core.outputs.tag }}
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create -t ${{ env.REGISTRY_IMAGE }}:${{ needs.build-core.outputs.tag }} -t ${{ env.REGISTRY_IMAGE }}:latest \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ needs.build-core.outputs.tag }}
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:latest

  push-core:
    needs: merge-core
    uses: ./.github/workflows/push-to-k8s.yaml
    with:
      github-repository: git@github.com:dotmethodme/kubernetes.git
      image-name: storywise
      image-tag: ${{ needs.merge-core.outputs.tag }}
      folder: ./storywise
    secrets:
      ssh-key: ${{ secrets.SSH_KEY }}
      known-hosts: ${{ secrets.KNOWN_HOSTS }}

  build-website:
    runs-on: ubuntu-latest
    needs: tag
    outputs:
      tag: ${{ needs.tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.website
          push: true
          tags: mihainueleanu/storywise-website:latest,mihainueleanu/storywise-website:${{ needs.tag.outputs.tag }}
          cache-from: type=registry,ref=mihainueleanu/storywise-website:latest
          cache-to: type=inline

  push-website:
    needs: build-website
    uses: ./.github/workflows/push-to-k8s.yaml
    with:
      github-repository: git@github.com:dotmethodme/kubernetes.git
      image-name: storywise-website
      image-tag: ${{ needs.build-website.outputs.tag }}
    secrets:
      ssh-key: ${{ secrets.SSH_KEY }}
      known-hosts: ${{ secrets.KNOWN_HOSTS }}
