name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "website/**"
      - "api/**"
      - "frontend/**"
      - "shared/**"
      - "Dockerfile"
      - "Dockerfile.website"
      - "package.json"
      - "package-lock.json"
jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.versionBump.outputs.tag }}
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout Git repo
        uses: actions/checkout@master

      - name: Automated Version Bump
        id: versionBump
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag-prefix: ""
          skip-on-empty: "false"
          skip-version-file: true
          output-file: false
          skip-commit: true

      - name: Automated GitHub Release
        uses: actions/create-release@v1
        if: ${{ steps.versionBump.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.versionBump.outputs.tag }}
          release_name: ${{ steps.versionBump.outputs.tag }}
          body: ${{ steps.versionBump.outputs.clean_changelog }}

  build-core:
    runs-on: ubuntu-latest
    needs: tag
    outputs:
      tag: ${{ needs.tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: mihainueleanu/storywise:latest,mihainueleanu/storywise:${{ needs.tag.outputs.tag }}
          cache-from: type=registry,ref=mihainueleanu/storywise:latest
          cache-to: type=inline

  push-core:
    needs: build-core
    uses: ./.github/workflows/push-to-k8s.yaml
    with:
      github-repository: git@github.com:dotmethodme/kubernetes.git
      image-name: storywise
      image-tag: ${{ needs.build-core.outputs.tag }}
    secrets:
      ssh-key: ${{ secrets.SSH_KEY }}
      known-hosts: ${{ secrets.KNOWN_HOSTS }}

  build-website:
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.website
          push: true
          tags: mihainueleanu/storywise-website:latest,mihainueleanu/storywise-website:${{ needs.tag.outputs.tag }}
          cache-from: type=registry,ref=mihainueleanu/storywise-website:latest
          cache-to: type=inline
